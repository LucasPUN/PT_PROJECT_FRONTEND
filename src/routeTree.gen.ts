/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as Import } from './routes/*'
import { Route as IndexImport } from './routes/index'
import { Route as ThankyouIndexImport } from './routes/thankyou/index'
import { Route as ShoppingcartIndexImport } from './routes/shoppingcart/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ProductPidImport } from './routes/product/$pid'
import { Route as CheckoutTransactionIdImport } from './routes/checkout/$transactionId'

// Create/Update Routes

const Route = Import.update({
  id: '/*',
  path: '/*',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ThankyouIndexRoute = ThankyouIndexImport.update({
  id: '/thankyou/',
  path: '/thankyou/',
  getParentRoute: () => rootRoute,
} as any)

const ShoppingcartIndexRoute = ShoppingcartIndexImport.update({
  id: '/shoppingcart/',
  path: '/shoppingcart/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ProductPidRoute = ProductPidImport.update({
  id: '/product/$pid',
  path: '/product/$pid',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutTransactionIdRoute = CheckoutTransactionIdImport.update({
  id: '/checkout/$transactionId',
  path: '/checkout/$transactionId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/*': {
      id: '/*'
      path: '/*'
      fullPath: '/*'
      preLoaderRoute: typeof Import
      parentRoute: typeof rootRoute
    }
    '/checkout/$transactionId': {
      id: '/checkout/$transactionId'
      path: '/checkout/$transactionId'
      fullPath: '/checkout/$transactionId'
      preLoaderRoute: typeof CheckoutTransactionIdImport
      parentRoute: typeof rootRoute
    }
    '/product/$pid': {
      id: '/product/$pid'
      path: '/product/$pid'
      fullPath: '/product/$pid'
      preLoaderRoute: typeof ProductPidImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/shoppingcart/': {
      id: '/shoppingcart/'
      path: '/shoppingcart'
      fullPath: '/shoppingcart'
      preLoaderRoute: typeof ShoppingcartIndexImport
      parentRoute: typeof rootRoute
    }
    '/thankyou/': {
      id: '/thankyou/'
      path: '/thankyou'
      fullPath: '/thankyou'
      preLoaderRoute: typeof ThankyouIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/*': typeof Route
  '/checkout/$transactionId': typeof CheckoutTransactionIdRoute
  '/product/$pid': typeof ProductPidRoute
  '/login': typeof LoginIndexRoute
  '/shoppingcart': typeof ShoppingcartIndexRoute
  '/thankyou': typeof ThankyouIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/*': typeof Route
  '/checkout/$transactionId': typeof CheckoutTransactionIdRoute
  '/product/$pid': typeof ProductPidRoute
  '/login': typeof LoginIndexRoute
  '/shoppingcart': typeof ShoppingcartIndexRoute
  '/thankyou': typeof ThankyouIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/*': typeof Route
  '/checkout/$transactionId': typeof CheckoutTransactionIdRoute
  '/product/$pid': typeof ProductPidRoute
  '/login/': typeof LoginIndexRoute
  '/shoppingcart/': typeof ShoppingcartIndexRoute
  '/thankyou/': typeof ThankyouIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/*'
    | '/checkout/$transactionId'
    | '/product/$pid'
    | '/login'
    | '/shoppingcart'
    | '/thankyou'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/*'
    | '/checkout/$transactionId'
    | '/product/$pid'
    | '/login'
    | '/shoppingcart'
    | '/thankyou'
  id:
    | '__root__'
    | '/'
    | '/*'
    | '/checkout/$transactionId'
    | '/product/$pid'
    | '/login/'
    | '/shoppingcart/'
    | '/thankyou/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Route: typeof Route
  CheckoutTransactionIdRoute: typeof CheckoutTransactionIdRoute
  ProductPidRoute: typeof ProductPidRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ShoppingcartIndexRoute: typeof ShoppingcartIndexRoute
  ThankyouIndexRoute: typeof ThankyouIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Route: Route,
  CheckoutTransactionIdRoute: CheckoutTransactionIdRoute,
  ProductPidRoute: ProductPidRoute,
  LoginIndexRoute: LoginIndexRoute,
  ShoppingcartIndexRoute: ShoppingcartIndexRoute,
  ThankyouIndexRoute: ThankyouIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/*",
        "/checkout/$transactionId",
        "/product/$pid",
        "/login/",
        "/shoppingcart/",
        "/thankyou/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/*": {
      "filePath": "*.tsx"
    },
    "/checkout/$transactionId": {
      "filePath": "checkout/$transactionId.tsx"
    },
    "/product/$pid": {
      "filePath": "product/$pid.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/shoppingcart/": {
      "filePath": "shoppingcart/index.tsx"
    },
    "/thankyou/": {
      "filePath": "thankyou/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
